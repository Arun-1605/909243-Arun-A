@model ECart_UI.Models.OrderViewModel

@{
    ViewBag.Title = "PlaceOrder";
}

@if (Model.CartItems.Count() > 0)
{
    <h2 class="mt-2">Confirm Your Order</h2>
    <div class="row">
        <div class="col-md-8">
            <h4>Order Items</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Sub Total</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartItems)
                    {
                        <tr>
                            <td>@item.ProductName</td>
                            <td>@item.Quantity</td>
                            <td>@item.SubTotal</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-md-4">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4 class="border-bottom pb-2">Payment &amp; Delivery Details</h4>
                    <div class="form-group">
                        <p class="font-weight-bold text-success">Amount Payable : @Model.CartItems.Sum(i => i.SubTotal) INR</p>
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.PaymentMode, Model.PaymentModes, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Confirm Order" class="btn btn-primary btn-lg" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
}
else
{
    <div class="d-flex flex-column align-items-center align-middle border border-success p-4 m-4">
        <h1 class="text-center text-secondary">No Items in Cart to place order. </h1>
        @Html.ActionLink("Browse Product Catalog", "Index", "Products", null, new { @class = "align-items-center btn btn-primary btn-lg" })
    </div>
}






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
